import{E as _,U as ht,a as he,a4 as j,u as P,a3 as ve,o as Ce,w as I,c as F,P as lt,K as Be,a1 as k,a2 as A,m as V,B as H,$ as U,a5 as dt,a6 as ut,b as ft,a7 as J,a8 as R,Q as $,I as pt,f as B,a9 as Z,aa as gt,H as v,ab as mt,D as O,L as xt,p as K,ac as _t,M as le,G as bt,ad as ee,n as de,e as C,ae as yt}from"./index.BCXKeJ5v.js";import{U as D,T as M,R as re,S as Pe,i as se,b as Fe,c as Me,j as Re,e as Tt,r as ke,o as wt,n as Ae,a as St,g as vt,k as Ct,m as Bt,B as Ue}from"./colorToUniform.DuTS1e26.js";import{C as W}from"./CanvasPool.DshXFKJ-.js";import{b as Pt}from"./batchSamplersUniformGroup.CmxIi8jM.js";import"./_commonjsHelpers.Cpj98o6Y.js";class Ge{static init(e){Object.defineProperty(this,"resizeTo",{set(t){globalThis.removeEventListener("resize",this.queueResize),this._resizeTo=t,t&&(globalThis.addEventListener("resize",this.queueResize),this.resize())},get(){return this._resizeTo}}),this.queueResize=()=>{this._resizeTo&&(this._cancelResize(),this._resizeId=requestAnimationFrame(()=>this.resize()))},this._cancelResize=()=>{this._resizeId&&(cancelAnimationFrame(this._resizeId),this._resizeId=null)},this.resize=()=>{if(!this._resizeTo)return;this._cancelResize();let t,r;if(this._resizeTo===globalThis.window)t=globalThis.innerWidth,r=globalThis.innerHeight;else{const{clientWidth:s,clientHeight:n}=this._resizeTo;t=s,r=n}this.renderer.resize(t,r),this.render()},this._resizeId=null,this._resizeTo=null,this.resizeTo=e.resizeTo||null}static destroy(){globalThis.removeEventListener("resize",this.queueResize),this._cancelResize(),this._cancelResize=null,this.queueResize=null,this.resizeTo=null,this.resize=null}}Ge.extension=_.Application;class ze{static init(e){e=Object.assign({autoStart:!0,sharedTicker:!1},e),Object.defineProperty(this,"ticker",{set(t){this._ticker&&this._ticker.remove(this.render,this),this._ticker=t,t&&t.add(this.render,this,ht.LOW)},get(){return this._ticker}}),this.stop=()=>{this._ticker.stop()},this.start=()=>{this._ticker.start()},this._ticker=null,this.ticker=e.sharedTicker?he.shared:new he,e.autoStart&&this.start()}static destroy(){if(this._ticker){const e=this._ticker;this.ticker=null,e.destroy()}}}ze.extension=_.Application;class He{constructor(e){this._renderer=e}push(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",canBundle:!1,action:"pushFilter",container:t,filterEffect:e})}pop(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",action:"popFilter",canBundle:!1})}execute(e){e.action==="pushFilter"?this._renderer.filter.push(e):e.action==="popFilter"&&this._renderer.filter.pop()}destroy(){this._renderer=null}}He.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"filter"};const Ft=new P;function Mt(i,e){return e.clear(),We(i,e),e.isValid||e.set(0,0,0,0),i.isRenderGroupRoot?e.applyMatrix(i.renderGroup.localTransform):e.applyMatrix(i.renderGroup.worldTransform),e}function We(i,e){if(i.localDisplayStatus!==7||!i.measurable)return;const t=!!i.effects.length;let r=e;if((i.isRenderGroupRoot||t)&&(r=j.get().clear()),i.boundsArea)e.addRect(i.boundsArea,i.worldTransform);else{if(i.renderPipeId){const n=i.bounds;r.addFrame(n.minX,n.minY,n.maxX,n.maxY,i.groupTransform)}const s=i.children;for(let n=0;n<s.length;n++)We(s[n],r)}if(t){let s=!1;for(let n=0;n<i.effects.length;n++)i.effects[n].addBounds&&(s||(s=!0,r.applyMatrix(i.renderGroup.worldTransform)),i.effects[n].addBounds(r,!0));s&&(r.applyMatrix(i.renderGroup.worldTransform.copyTo(Ft).invert()),e.addBounds(r,i.relativeGroupTransform)),e.addBounds(r),j.return(r)}else i.isRenderGroupRoot&&(e.addBounds(r,i.relativeGroupTransform),j.return(r))}function Rt(i,e){e.clear();const t=e.matrix;for(let r=0;r<i.length;r++){const s=i[r];s.globalDisplayStatus<7||(e.matrix=s.worldTransform,s.addBounds(e))}return e.matrix=t,e}const kt=new ve({attributes:{aPosition:{buffer:new Float32Array([0,0,1,0,1,1,0,1]),location:0,format:"float32x2",stride:2*4,offset:0}},indexBuffer:new Uint32Array([0,1,2,0,2,3])});class Ie{constructor(e){this._filterStackIndex=0,this._filterStack=[],this._filterGlobalUniforms=new D({uInputSize:{value:new Float32Array(4),type:"vec4<f32>"},uInputPixel:{value:new Float32Array(4),type:"vec4<f32>"},uInputClamp:{value:new Float32Array(4),type:"vec4<f32>"},uOutputFrame:{value:new Float32Array(4),type:"vec4<f32>"},uGlobalFrame:{value:new Float32Array(4),type:"vec4<f32>"},uOutputTexture:{value:new Float32Array(4),type:"vec4<f32>"}}),this._globalFilterBindGroup=new Ce({}),this.renderer=e}get activeBackTexture(){return this._activeFilterData?.backTexture}push(e){const t=this.renderer,r=e.filterEffect.filters;this._filterStack[this._filterStackIndex]||(this._filterStack[this._filterStackIndex]=this._getFilterData());const s=this._filterStack[this._filterStackIndex];if(this._filterStackIndex++,r.length===0){s.skip=!0;return}const n=s.bounds;e.renderables?Rt(e.renderables,n):e.filterEffect.filterArea?(n.clear(),n.addRect(e.filterEffect.filterArea),n.applyMatrix(e.container.worldTransform)):Mt(e.container,n);const a=t.renderTarget.rootRenderTarget.colorTexture.source;let o=a._resolution,c=0,l=a.antialias,h=!1,d=!1;for(let f=0;f<r.length;f++){const u=r[f];if(o=Math.min(o,u.resolution),c+=u.padding,u.antialias!=="inherit"&&(u.antialias==="on"?l=!0:l=!1),!!!(u.compatibleRenderers&t.type)){d=!1;break}if(u.blendRequired&&!(t.backBuffer?.useBackBuffer??!0)){I("Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options."),d=!1;break}d=u.enabled||d,h=h||u.blendRequired}if(!d){s.skip=!0;return}if(n.scale(o).fit(t.renderTarget.rootViewPort).scale(1/o).pad(c).ceil(),!n.isPositive){s.skip=!0;return}s.skip=!1,s.bounds=n,s.blendRequired=h,s.container=e.container,s.filterEffect=e.filterEffect,s.previousRenderSurface=t.renderTarget.renderSurface,s.inputTexture=M.getOptimalTexture(n.width,n.height,o,l),t.renderTarget.bind(s.inputTexture,!0),t.globalUniforms.push({offset:n})}pop(){const e=this.renderer;this._filterStackIndex--;const t=this._filterStack[this._filterStackIndex];if(t.skip)return;this._activeFilterData=t;const r=t.inputTexture,s=t.bounds;let n=F.EMPTY;if(e.renderTarget.finishRenderPass(),t.blendRequired){const o=this._filterStackIndex>0?this._filterStack[this._filterStackIndex-1].bounds:null,c=e.renderTarget.getRenderTarget(t.previousRenderSurface);n=this.getBackTexture(c,s,o)}t.backTexture=n;const a=t.filterEffect.filters;if(this._globalFilterBindGroup.setResource(r.source.style,2),this._globalFilterBindGroup.setResource(n.source,3),e.globalUniforms.pop(),a.length===1)a[0].apply(this,r,t.previousRenderSurface,!1),M.returnTexture(r);else{let o=t.inputTexture,c=M.getOptimalTexture(s.width,s.height,o.source._resolution,!1),l=0;for(l=0;l<a.length-1;++l){a[l].apply(this,o,c,!0);const d=o;o=c,c=d}a[l].apply(this,o,t.previousRenderSurface,!1),M.returnTexture(o),M.returnTexture(c)}t.blendRequired&&M.returnTexture(n)}getBackTexture(e,t,r){const s=e.colorTexture.source._resolution,n=M.getOptimalTexture(t.width,t.height,s,!1);let a=t.minX,o=t.minY;r&&(a-=r.minX,o-=r.minY),a=Math.floor(a*s),o=Math.floor(o*s);const c=Math.ceil(t.width*s),l=Math.ceil(t.height*s);return this.renderer.renderTarget.copyToTexture(e,n,{x:a,y:o},{width:c,height:l},{x:0,y:0}),n}applyFilter(e,t,r,s){const n=this.renderer,a=this._filterStack[this._filterStackIndex],o=a.bounds,c=lt.shared,h=a.previousRenderSurface===r;let d=this.renderer.renderTarget.rootRenderTarget.colorTexture.source._resolution,f=this._filterStackIndex-1;for(;f>0&&this._filterStack[f].skip;)--f;f>0&&(d=this._filterStack[f].inputTexture.source._resolution);const u=this._filterGlobalUniforms,p=u.uniforms,g=p.uOutputFrame,m=p.uInputSize,x=p.uInputPixel,b=p.uInputClamp,w=p.uGlobalFrame,y=p.uOutputTexture;if(h){let S=this._filterStackIndex;for(;S>0;){S--;const T=this._filterStack[this._filterStackIndex-1];if(!T.skip){c.x=T.bounds.minX,c.y=T.bounds.minY;break}}g[0]=o.minX-c.x,g[1]=o.minY-c.y}else g[0]=0,g[1]=0;g[2]=t.frame.width,g[3]=t.frame.height,m[0]=t.source.width,m[1]=t.source.height,m[2]=1/m[0],m[3]=1/m[1],x[0]=t.source.pixelWidth,x[1]=t.source.pixelHeight,x[2]=1/x[0],x[3]=1/x[1],b[0]=.5*x[2],b[1]=.5*x[3],b[2]=t.frame.width*m[2]-.5*x[2],b[3]=t.frame.height*m[3]-.5*x[3];const G=this.renderer.renderTarget.rootRenderTarget.colorTexture;w[0]=c.x*d,w[1]=c.y*d,w[2]=G.source.width*d,w[3]=G.source.height*d;const z=this.renderer.renderTarget.getRenderTarget(r);if(n.renderTarget.bind(r,!!s),r instanceof F?(y[0]=r.frame.width,y[1]=r.frame.height):(y[0]=z.width,y[1]=z.height),y[2]=z.isRoot?-1:1,u.update(),n.renderPipes.uniformBatch){const S=n.renderPipes.uniformBatch.getUboResource(u);this._globalFilterBindGroup.setResource(S,0)}else this._globalFilterBindGroup.setResource(u,0);this._globalFilterBindGroup.setResource(t.source,1),this._globalFilterBindGroup.setResource(t.source.style,2),e.groups[0]=this._globalFilterBindGroup,n.encoder.draw({geometry:kt,shader:e,state:e._state,topology:"triangle-list"}),n.type===re.WEBGL&&n.renderTarget.finishRenderPass()}_getFilterData(){return{skip:!1,inputTexture:null,bounds:new Be,container:null,filterEffect:null,blendRequired:!1,previousRenderSurface:null}}calculateSpriteMatrix(e,t){const r=this._activeFilterData,s=e.set(r.inputTexture._source.width,0,0,r.inputTexture._source.height,r.bounds.minX,r.bounds.minY),n=t.worldTransform.copyTo(P.shared);return n.invert(),s.prepend(n),s.scale(1/t.texture.frame.width,1/t.texture.frame.height),s.translate(t.anchor.x,t.anchor.y),s}}Ie.extension={type:[_.WebGLSystem,_.WebGPUSystem],name:"filter"};const Oe=class De extends ve{constructor(...e){let t=e[0]??{};t instanceof Float32Array&&(k(A,"use new MeshGeometry({ positions, uvs, indices }) instead"),t={positions:t,uvs:e[1],indices:e[2]}),t={...De.defaultOptions,...t};const r=t.positions||new Float32Array([0,0,1,0,1,1,0,1]),s=t.uvs||new Float32Array([0,0,1,0,1,1,0,1]),n=t.indices||new Uint32Array([0,1,2,0,2,3]),a=t.shrinkBuffersToFit,o=new V({data:r,label:"attribute-mesh-positions",shrinkToFit:a,usage:H.VERTEX|H.COPY_DST}),c=new V({data:s,label:"attribute-mesh-uvs",shrinkToFit:a,usage:H.VERTEX|H.COPY_DST}),l=new V({data:n,label:"index-mesh-buffer",shrinkToFit:a,usage:H.INDEX|H.COPY_DST});super({attributes:{aPosition:{buffer:o,format:"float32x2",stride:2*4,offset:0},aUV:{buffer:c,format:"float32x2",stride:2*4,offset:0}},indexBuffer:l,topology:t.topology}),this.batchMode="auto"}get positions(){return this.attributes.aPosition.buffer.data}set positions(e){this.attributes.aPosition.buffer.data=e}get uvs(){return this.attributes.aUV.buffer.data}set uvs(e){this.attributes.aUV.buffer.data=e}get indices(){return this.indexBuffer.data}set indices(e){this.indexBuffer.data=e}};Oe.defaultOptions={topology:"triangle-list",shrinkBuffersToFit:!1};let ie=Oe;function X(i,e){if(i.texture===F.WHITE&&!i.fill)return U.shared.setValue(i.color).toHex();if(i.fill){if(i.fill instanceof dt){const t=i.fill,r=e.createPattern(t.texture.source.resource,"repeat"),s=t.transform.copyTo(P.shared);return s.scale(t.texture.frame.width,t.texture.frame.height),r.setTransform(s),r}else if(i.fill instanceof ut){const t=i.fill;if(t.type==="linear"){const r=e.createLinearGradient(t.x0,t.y0,t.x1,t.y1);return t.gradientStops.forEach(s=>{r.addColorStop(s.offset,U.shared.setValue(s.color).toHex())}),r}}}else{const t=e.createPattern(i.texture.source.resource,"repeat"),r=i.matrix.copyTo(P.shared);return r.scale(i.texture.frame.width,i.texture.frame.height),t.setTransform(r),t}return I("FillStyle not recognised",i),"red"}class Le extends ft{constructor(){super(...arguments),this.chars=Object.create(null),this.lineHeight=0,this.fontFamily="",this.fontMetrics={fontSize:0,ascent:0,descent:0},this.baseLineOffset=0,this.distanceField={type:"none",range:0},this.pages=[],this.baseMeasurementFontSize=100,this.baseRenderedFontSize=100}get font(){return k(A,"BitmapFont.font is deprecated, please use BitmapFont.fontFamily instead."),this.fontFamily}get pageTextures(){return k(A,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}get size(){return k(A,"BitmapFont.size is deprecated, please use BitmapFont.fontMetrics.fontSize instead."),this.fontMetrics.fontSize}get distanceFieldRange(){return k(A,"BitmapFont.distanceFieldRange is deprecated, please use BitmapFont.distanceField.range instead."),this.distanceField.range}get distanceFieldType(){return k(A,"BitmapFont.distanceFieldType is deprecated, please use BitmapFont.distanceField.type instead."),this.distanceField.type}destroy(){this.emit("destroy",this),this.removeAllListeners();for(const e in this.chars)this.chars[e].texture.destroy();this.chars=null}}function Ee(i){if(i==="")return[];typeof i=="string"&&(i=[i]);const e=[];for(let t=0,r=i.length;t<r;t++){const s=i[t];if(Array.isArray(s)){if(s.length!==2)throw new Error(`[BitmapFont]: Invalid character range length, expecting 2 got ${s.length}.`);if(s[0].length===0||s[1].length===0)throw new Error("[BitmapFont]: Invalid character delimiter.");const n=s[0].charCodeAt(0),a=s[1].charCodeAt(0);if(a<n)throw new Error("[BitmapFont]: Invalid character range.");for(let o=n,c=a;o<=c;o++)e.push(String.fromCharCode(o))}else e.push(...Array.from(s))}if(e.length===0)throw new Error("[BitmapFont]: Empty set when resolving characters.");return e}class ue extends Le{constructor(e){super(),this.resolution=1,this.pages=[],this._padding=4,this._measureCache=Object.create(null),this._currentChars=[],this._currentX=0,this._currentY=0,this._currentPageIndex=-1,this._skipKerning=!1;const t=e,r=t.style.clone();t.overrideFill&&(r._fill.color=16777215,r._fill.alpha=1,r._fill.texture=F.WHITE,r._fill.fill=null);const s=r.fontSize;r.fontSize=this.baseMeasurementFontSize;const n=J(r);t.overrideSize?r._stroke&&(r._stroke.width*=this.baseRenderedFontSize/s):r.fontSize=this.baseRenderedFontSize=s,this._style=r,this._skipKerning=t.skipKerning??!1,this.resolution=t.resolution??1,this._padding=t.padding??4,this.fontMetrics=R.measureFont(n),this.lineHeight=r.lineHeight||this.fontMetrics.fontSize||r.fontSize}ensureCharacters(e){const t=Ee(e).filter(g=>!this._currentChars.includes(g)).filter((g,m,x)=>x.indexOf(g)===m);if(!t.length)return;this._currentChars=[...this._currentChars,...t];let r;this._currentPageIndex===-1?r=this._nextPage():r=this.pages[this._currentPageIndex];let{canvas:s,context:n}=r.canvasAndContext,a=r.texture.source;const o=this._style;let c=this._currentX,l=this._currentY;const h=this.baseRenderedFontSize/this.baseMeasurementFontSize,d=this._padding*h,f=o.fontStyle==="italic"?2:1;let u=0,p=!1;for(let g=0;g<t.length;g++){const m=t[g],x=R.measureText(m,o,s,!1);x.lineHeight=x.height;const b=f*x.width*h,w=x.height*h,y=b+d*2,G=w+d*2;if(p=!1,m!==`
`&&m!=="\r"&&m!=="	"&&m!==" "&&(p=!0,u=Math.ceil(Math.max(G,u))),c+y>512&&(l+=u,u=G,c=0,l+u>512)){a.update();const S=this._nextPage();s=S.canvasAndContext.canvas,n=S.canvasAndContext.context,a=S.texture.source,l=0}const z=b/h-(o.dropShadow?.distance??0)-(o._stroke?.width??0);if(this.chars[m]={id:m.codePointAt(0),xOffset:-this._padding,yOffset:-this._padding,xAdvance:z,kerning:{}},p){this._drawGlyph(n,x,c+d,l+d,h,o);const S=a.width*h,T=a.height*h,Y=new $(c/S*a.width,l/T*a.height,y/S*a.width,G/T*a.height);this.chars[m].texture=new F({source:a,frame:Y}),c+=Math.ceil(y)}}a.update(),this._currentX=c,this._currentY=l,this._skipKerning&&this._applyKerning(t,n)}get pageTextures(){return k(A,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}_applyKerning(e,t){const r=this._measureCache;for(let s=0;s<e.length;s++){const n=e[s];for(let a=0;a<this._currentChars.length;a++){const o=this._currentChars[a];let c=r[n];c||(c=r[n]=t.measureText(n).width);let l=r[o];l||(l=r[o]=t.measureText(o).width);let h=t.measureText(n+o).width,d=h-(c+l);d&&(this.chars[n].kerning[o]=d),h=t.measureText(n+o).width,d=h-(c+l),d&&(this.chars[o].kerning[n]=d)}}}_nextPage(){this._currentPageIndex++;const e=this.resolution,t=W.getOptimalCanvasAndContext(512,512,e);this._setupContext(t.context,this._style,e);const r=e*(this.baseRenderedFontSize/this.baseMeasurementFontSize),s=new F({source:new pt({resource:t.canvas,resolution:r,alphaMode:"premultiply-alpha-on-upload"})}),n={canvasAndContext:t,texture:s};return this.pages[this._currentPageIndex]=n,n}_setupContext(e,t,r){t.fontSize=this.baseRenderedFontSize,e.scale(r,r),e.font=J(t),t.fontSize=this.baseMeasurementFontSize,e.textBaseline=t.textBaseline;const s=t._stroke,n=s?.width??0;if(s&&(e.lineWidth=n,e.lineJoin=s.join,e.miterLimit=s.miterLimit,e.strokeStyle=X(s,e)),t._fill&&(e.fillStyle=X(t._fill,e)),t.dropShadow){const a=t.dropShadow,o=U.shared.setValue(a.color).toArray(),c=a.blur*r,l=a.distance*r;e.shadowColor=`rgba(${o[0]*255},${o[1]*255},${o[2]*255},${a.alpha})`,e.shadowBlur=c,e.shadowOffsetX=Math.cos(a.angle)*l,e.shadowOffsetY=Math.sin(a.angle)*l}else e.shadowColor="black",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0}_drawGlyph(e,t,r,s,n,a){const o=t.text,c=t.fontProperties,h=(a._stroke?.width??0)*n,d=r+h/2,f=s-h/2,u=c.descent*n,p=t.lineHeight*n;a.stroke&&h&&e.strokeText(o,d,f+p-u),a._fill&&e.fillText(o,d,f+p-u)}destroy(){super.destroy();for(let e=0;e<this.pages.length;e++){const{canvasAndContext:t,texture:r}=this.pages[e];W.returnCanvasAndContext(t),r.destroy(!0)}this.pages=null}}function $e(i,e,t){const r={width:0,height:0,offsetY:0,scale:e.fontSize/t.baseMeasurementFontSize,lines:[{width:0,charPositions:[],spaceWidth:0,spacesIndex:[],chars:[]}]};r.offsetY=t.baseLineOffset;let s=r.lines[0],n=null,a=!0;const o={spaceWord:!1,width:0,start:0,index:0,positions:[],chars:[]},c=u=>{const p=s.width;for(let g=0;g<o.index;g++){const m=u.positions[g];s.chars.push(u.chars[g]),s.charPositions.push(m+p)}s.width+=u.width,a=!1,o.width=0,o.index=0,o.chars.length=0},l=()=>{let u=s.chars.length-1,p=s.chars[u];for(;p===" ";)s.width-=t.chars[p].xAdvance,p=s.chars[--u];r.width=Math.max(r.width,s.width),s={width:0,charPositions:[],chars:[],spaceWidth:0,spacesIndex:[]},a=!0,r.lines.push(s),r.height+=t.lineHeight},h=t.baseMeasurementFontSize/e.fontSize,d=e.letterSpacing*h,f=e.wordWrapWidth*h;for(let u=0;u<i.length+1;u++){let p;const g=u===i.length;g||(p=i[u]);const m=t.chars[p]||t.chars[" "];if(/(?:\s)/.test(p)||p==="\r"||p===`
`||g){if(!a&&e.wordWrap&&s.width+o.width-d>f?(l(),c(o),g||s.charPositions.push(0)):(o.start=s.width,c(o),g||s.charPositions.push(0)),p==="\r"||p===`
`)s.width!==0&&l();else if(!g){const y=m.xAdvance+(m.kerning[n]||0)+d;s.width+=y,s.spaceWidth=y,s.spacesIndex.push(s.charPositions.length),s.chars.push(p)}}else{const w=m.kerning[n]||0,y=m.xAdvance+w+d;o.positions[o.index++]=o.width+w,o.chars.push(p),o.width+=y}n=p}return l(),e.align==="center"?At(r):e.align==="right"?Ut(r):e.align==="justify"&&Gt(r),r}function At(i){for(let e=0;e<i.lines.length;e++){const t=i.lines[e],r=i.width/2-t.width/2;for(let s=0;s<t.charPositions.length;s++)t.charPositions[s]+=r}}function Ut(i){for(let e=0;e<i.lines.length;e++){const t=i.lines[e],r=i.width-t.width;for(let s=0;s<t.charPositions.length;s++)t.charPositions[s]+=r}}function Gt(i){const e=i.width;for(let t=0;t<i.lines.length;t++){const r=i.lines[t];let s=0,n=r.spacesIndex[s++],a=0;const o=r.spacesIndex.length,l=(e-r.width)/o;for(let h=0;h<r.charPositions.length;h++)h===n&&(n=r.spacesIndex[s++],a+=l),r.charPositions[h]+=a}}class zt{constructor(){this.ALPHA=[["a","z"],["A","Z"]," "],this.NUMERIC=[["0","9"]],this.ALPHANUMERIC=[["a","z"],["A","Z"],["0","9"]," "],this.ASCII=[[" ","~"]],this.defaultOptions={chars:this.ALPHANUMERIC,resolution:1,padding:4,skipKerning:!1}}getFont(e,t){let r=`${t.fontFamily}-bitmap`,s=!0;if(t._fill.fill&&(r+=t._fill.fill.uid,s=!1),!B.has(r)){const a=new ue({style:t,overrideFill:s,overrideSize:!0,...this.defaultOptions});a.once("destroy",()=>B.remove(r)),B.set(r,a)}const n=B.get(r);return n.ensureCharacters?.(e),n}getLayout(e,t){const r=this.getFont(e,t);return $e(e.split(""),t,r)}measureText(e,t){return this.getLayout(e,t)}install(...e){let t=e[0];typeof t=="string"&&(t={name:t,style:e[1],chars:e[2]?.chars,resolution:e[2]?.resolution,padding:e[2]?.padding,skipKerning:e[2]?.skipKerning},k(A,"BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})"));const r=t?.name;if(!r)throw new Error("[BitmapFontManager] Property `name` is required.");t={...this.defaultOptions,...t};const s=t.style,n=s instanceof Z?s:new Z(s),a=n._fill.fill!==null&&n._fill.fill!==void 0,o=new ue({style:n,overrideFill:a,skipKerning:t.skipKerning,padding:t.padding,resolution:t.resolution,overrideSize:!1}),c=Ee(t.chars);return o.ensureCharacters(c.join("")),B.set(`${r}-bitmap`,o),o.once("destroy",()=>B.remove(`${r}-bitmap`)),o}uninstall(e){const t=`${e}-bitmap`,r=B.get(t);r&&(B.remove(t),r.destroy())}}const te=new zt;function Ht(i){const e=i._stroke,t=i._fill,s=[`div { ${[`color: ${U.shared.setValue(t.color).toHex()}`,`font-size: ${i.fontSize}px`,`font-family: ${i.fontFamily}`,`font-weight: ${i.fontWeight}`,`font-style: ${i.fontStyle}`,`font-variant: ${i.fontVariant}`,`letter-spacing: ${i.letterSpacing}px`,`text-align: ${i.align}`,`padding: ${i.padding}px`,`white-space: ${i.whiteSpace==="pre"&&i.wordWrap?"pre-wrap":i.whiteSpace}`,...i.lineHeight?[`line-height: ${i.lineHeight}px`]:[],...i.wordWrap?[`word-wrap: ${i.breakWords?"break-all":"break-word"}`,`max-width: ${i.wordWrapWidth}px`]:[],...e?[Ye(e)]:[],...i.dropShadow?[Xe(i.dropShadow)]:[],...i.cssOverrides].join(";")} }`];return Wt(i.tagStyles,s),s.join(" ")}function Xe(i){const e=U.shared.setValue(i.color).setAlpha(i.alpha).toHexa(),t=Math.round(Math.cos(i.angle)*i.distance),r=Math.round(Math.sin(i.angle)*i.distance),s=`${t}px ${r}px`;return i.blur>0?`text-shadow: ${s} ${i.blur}px ${e}`:`text-shadow: ${s} ${e}`}function Ye(i){return[`-webkit-text-stroke-width: ${i.width}px`,`-webkit-text-stroke-color: ${U.shared.setValue(i.color).toHex()}`,`text-stroke-width: ${i.width}px`,`text-stroke-color: ${U.shared.setValue(i.color).toHex()}`,"paint-order: stroke"].join(";")}const fe={fontSize:"font-size: {{VALUE}}px",fontFamily:"font-family: {{VALUE}}",fontWeight:"font-weight: {{VALUE}}",fontStyle:"font-style: {{VALUE}}",fontVariant:"font-variant: {{VALUE}}",letterSpacing:"letter-spacing: {{VALUE}}px",align:"text-align: {{VALUE}}",padding:"padding: {{VALUE}}px",whiteSpace:"white-space: {{VALUE}}",lineHeight:"line-height: {{VALUE}}px",wordWrapWidth:"max-width: {{VALUE}}px"},pe={fill:i=>`color: ${U.shared.setValue(i).toHex()}`,breakWords:i=>`word-wrap: ${i?"break-all":"break-word"}`,stroke:Ye,dropShadow:Xe};function Wt(i,e){for(const t in i){const r=i[t],s=[];for(const n in r)pe[n]?s.push(pe[n](r[n])):fe[n]&&s.push(fe[n].replace("{{VALUE}}",r[n]));e.push(`${t} { ${s.join(";")} }`)}}class ne extends Z{constructor(e={}){super(e),this._cssOverrides=[],this.cssOverrides??(this.cssOverrides=e.cssOverrides),this.tagStyles=e.tagStyles??{}}set cssOverrides(e){this._cssOverrides=e instanceof Array?e:[e],this.update()}get cssOverrides(){return this._cssOverrides}_generateKey(){return this._styleKey=gt(this)+this._cssOverrides.join("-"),this._styleKey}update(){this._cssStyle=null,super.update()}clone(){return new ne({align:this.align,breakWords:this.breakWords,dropShadow:this.dropShadow,fill:this._fill,fontFamily:this.fontFamily,fontSize:this.fontSize,fontStyle:this.fontStyle,fontVariant:this.fontVariant,fontWeight:this.fontWeight,letterSpacing:this.letterSpacing,lineHeight:this.lineHeight,padding:this.padding,stroke:this._stroke,whiteSpace:this.whiteSpace,wordWrap:this.wordWrap,wordWrapWidth:this.wordWrapWidth,cssOverrides:this.cssOverrides})}get cssStyle(){return this._cssStyle||(this._cssStyle=Ht(this)),this._cssStyle}addOverride(...e){const t=e.filter(r=>!this.cssOverrides.includes(r));t.length>0&&(this.cssOverrides.push(...t),this.update())}removeOverride(...e){const t=e.filter(r=>this.cssOverrides.includes(r));t.length>0&&(this.cssOverrides=this.cssOverrides.filter(r=>!t.includes(r)),this.update())}set fill(e){typeof e!="string"&&typeof e!="number"&&I("[HTMLTextStyle] only color fill is not supported by HTMLText"),super.fill=e}set stroke(e){e&&typeof e!="string"&&typeof e!="number"&&I("[HTMLTextStyle] only color stroke is not supported by HTMLText"),super.stroke=e}}const ge="http://www.w3.org/2000/svg",me="http://www.w3.org/1999/xhtml";class je{constructor(){this.svgRoot=document.createElementNS(ge,"svg"),this.foreignObject=document.createElementNS(ge,"foreignObject"),this.domElement=document.createElementNS(me,"div"),this.styleElement=document.createElementNS(me,"style"),this.image=new Image;const{foreignObject:e,svgRoot:t,styleElement:r,domElement:s}=this;e.setAttribute("width","10000"),e.setAttribute("height","10000"),e.style.overflow="hidden",t.appendChild(e),e.appendChild(r),e.appendChild(s)}}let xe;function It(i,e,t,r){r=r||xe||(xe=new je);const{domElement:s,styleElement:n,svgRoot:a}=r;s.innerHTML=`<style>${e.cssStyle}</style><div>${i}</div>`,s.setAttribute("style","transform-origin: top left; display: inline-block"),t&&(n.textContent=t),document.body.appendChild(a);const o=s.getBoundingClientRect();a.remove();const c=R.measureFont(e.fontStyle).descent;return{width:o.width,height:o.height+c}}class Ve{constructor(e,t){this.state=Pe.for2d(),this._graphicsBatchesHash=Object.create(null),this.renderer=e,this._adaptor=t,this._adaptor.init()}validateRenderable(e){const t=e.context,r=!!this._graphicsBatchesHash[e.uid],s=this.renderer.graphicsContext.updateGpuContext(t);return!!(s.isBatchable||r!==s.isBatchable)}addRenderable(e,t){const r=this.renderer.graphicsContext.updateGpuContext(e.context);e._didGraphicsUpdate&&(e._didGraphicsUpdate=!1,this._rebuild(e)),r.isBatchable?this._addToBatcher(e,t):(this.renderer.renderPipes.batch.break(t),t.add(e))}updateRenderable(e){const t=this._graphicsBatchesHash[e.uid];if(t)for(let r=0;r<t.length;r++){const s=t[r];s.batcher.updateElement(s)}}destroyRenderable(e){this._graphicsBatchesHash[e.uid]&&this._removeBatchForRenderable(e.uid)}execute(e){if(!e.isRenderable)return;const t=this.renderer,r=e.context;if(!t.graphicsContext.getGpuContext(r).batches.length)return;const n=r.customShader||this._adaptor.shader;this.state.blendMode=e.groupBlendMode;const a=n.resources.localUniforms.uniforms;a.uTransformMatrix=e.groupTransform,a.uRound=t._roundPixels|e._roundPixels,se(e.groupColorAlpha,a.uColor,0),this._adaptor.execute(this,e)}_rebuild(e){const t=!!this._graphicsBatchesHash[e.uid],r=this.renderer.graphicsContext.updateGpuContext(e.context);t&&this._removeBatchForRenderable(e.uid),r.isBatchable&&this._initBatchesForRenderable(e),e.batched=r.isBatchable}_addToBatcher(e,t){const r=this.renderer.renderPipes.batch,s=this._getBatchesForRenderable(e);for(let n=0;n<s.length;n++){const a=s[n];r.addToBatch(a,t)}}_getBatchesForRenderable(e){return this._graphicsBatchesHash[e.uid]||this._initBatchesForRenderable(e)}_initBatchesForRenderable(e){const t=e.context,r=this.renderer.graphicsContext.getGpuContext(t),s=this.renderer._roundPixels|e._roundPixels,n=r.batches.map(a=>{const o=v.get(mt);return a.copyTo(o),o.renderable=e,o.roundPixels=s,o});return this._graphicsBatchesHash[e.uid]=n,e.on("destroyed",()=>{this.destroyRenderable(e)}),n}_removeBatchForRenderable(e){this._graphicsBatchesHash[e].forEach(t=>{v.return(t)}),this._graphicsBatchesHash[e]=null}destroy(){this.renderer=null,this._adaptor.destroy(),this._adaptor=null,this.state=null;for(const e in this._graphicsBatchesHash)this._removeBatchForRenderable(e);this._graphicsBatchesHash=null}}Ve.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"graphics"};const Ke=class Ne extends ie{constructor(...e){super({});let t=e[0]??{};typeof t=="number"&&(k(A,"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead"),t={width:t,height:e[1],verticesX:e[2],verticesY:e[3]}),this.build(t)}build(e){e={...Ne.defaultOptions,...e},this.verticesX=this.verticesX??e.verticesX,this.verticesY=this.verticesY??e.verticesY,this.width=this.width??e.width,this.height=this.height??e.height;const t=this.verticesX*this.verticesY,r=[],s=[],n=[],a=this.verticesX-1,o=this.verticesY-1,c=this.width/a,l=this.height/o;for(let d=0;d<t;d++){const f=d%this.verticesX,u=d/this.verticesX|0;r.push(f*c,u*l),s.push(f/a,u/o)}const h=a*o;for(let d=0;d<h;d++){const f=d%a,u=d/a|0,p=u*this.verticesX+f,g=u*this.verticesX+f+1,m=(u+1)*this.verticesX+f,x=(u+1)*this.verticesX+f+1;n.push(p,g,m,g,x,m)}this.buffers[0].data=new Float32Array(r),this.buffers[1].data=new Float32Array(s),this.indexBuffer.data=new Uint32Array(n),this.buffers[0].update(),this.buffers[1].update(),this.indexBuffer.update()}};Ke.defaultOptions={width:100,height:100,verticesX:10,verticesY:10};let Ot=Ke;class ae{constructor(){this.batcher=null,this.batch=null,this.roundPixels=0}get blendMode(){return this.mesh.groupBlendMode}reset(){this.mesh=null,this.texture=null,this.batcher=null,this.batch=null}packIndex(e,t,r){const s=this.geometry.indices;for(let n=0;n<s.length;n++)e[t++]=s[n]+r}packAttributes(e,t,r,s){const n=this.mesh,a=this.geometry,o=n.groupTransform,c=s<<16|this.roundPixels&65535,l=o.a,h=o.b,d=o.c,f=o.d,u=o.tx,p=o.ty,g=a.positions,m=a.uvs,x=n.groupColorAlpha;for(let b=0;b<g.length;b+=2){const w=g[b],y=g[b+1];e[r]=l*w+d*y+u,e[r+1]=h*w+f*y+p,e[r+2]=m[b],e[r+3]=m[b+1],t[r+4]=x,t[r+5]=c,r+=6}}get vertexSize(){return this.geometry.positions.length/2}get indexSize(){return this.geometry.indices.length}}class qe{constructor(e,t){this.localUniforms=new D({uTransformMatrix:{value:new P,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),this.localUniformsBindGroup=new Ce({0:this.localUniforms}),this._meshDataHash=Object.create(null),this._gpuBatchableMeshHash=Object.create(null),this.renderer=e,this._adaptor=t,this._adaptor.init()}validateRenderable(e){const t=this._getMeshData(e),r=t.batched,s=e.batched;if(t.batched=s,r!==s)return!0;if(s){const n=e._geometry;if(n.indices.length!==t.indexSize||n.positions.length!==t.vertexSize)return t.indexSize=n.indices.length,t.vertexSize=n.positions.length,!0;const a=this._getBatchableMesh(e),o=e.texture;if(a.texture._source!==o._source&&a.texture._source!==o._source)return a.batcher.checkAndUpdateTexture(a,o)}return!1}addRenderable(e,t){const r=this.renderer.renderPipes.batch,{batched:s}=this._getMeshData(e);if(s){const n=this._getBatchableMesh(e);n.texture=e._texture,n.geometry=e._geometry,r.addToBatch(n)}else r.break(t),t.add({renderPipeId:"mesh",mesh:e})}updateRenderable(e){if(e.batched){const t=this._gpuBatchableMeshHash[e.uid];t.texture=e._texture,t.geometry=e._geometry,t.batcher.updateElement(t)}}destroyRenderable(e){this._meshDataHash[e.uid]=null;const t=this._gpuBatchableMeshHash[e.uid];v.return(t),this._gpuBatchableMeshHash[e.uid]=null}execute({mesh:e}){if(!e.isRenderable)return;e.state.blendMode=e.groupBlendMode;const t=this.localUniforms;t.uniforms.uTransformMatrix=e.groupTransform,t.uniforms.uRound=this.renderer._roundPixels|e._roundPixels,t.update(),se(e.groupColorAlpha,t.uniforms.uColor,0),this._adaptor.execute(this,e)}_getMeshData(e){return this._meshDataHash[e.uid]||this._initMeshData(e)}_initMeshData(e){return this._meshDataHash[e.uid]={batched:e.batched,indexSize:e._geometry.indices?.length,vertexSize:e._geometry.positions?.length},e.on("destroyed",()=>{this.destroyRenderable(e)}),this._meshDataHash[e.uid]}_getBatchableMesh(e){return this._gpuBatchableMeshHash[e.uid]||this._initBatchableMesh(e)}_initBatchableMesh(e){const t=v.get(ae);return t.mesh=e,t.texture=e._texture,t.roundPixels=this.renderer._roundPixels|e._roundPixels,this._gpuBatchableMeshHash[e.uid]=t,t.mesh=e,t}destroy(){for(const e in this._gpuBatchableMeshHash)this._gpuBatchableMeshHash[e]&&v.return(this._gpuBatchableMeshHash[e]);this._gpuBatchableMeshHash=null,this._meshDataHash=null,this.localUniforms=null,this.localUniformsBindGroup=null,this._adaptor.destroy(),this._adaptor=null,this.renderer=null}}qe.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"mesh"};const Qe=class Je extends Ot{constructor(e={}){e={...Je.defaultOptions,...e},super({width:e.width,height:e.height,verticesX:4,verticesY:4}),this._textureMatrix=new P,this.update(e)}update(e){this.width=e.width??this.width,this.height=e.height??this.height,this._originalWidth=e.originalWidth??this._originalWidth,this._originalHeight=e.originalHeight??this._originalHeight,this._leftWidth=e.leftWidth??this._leftWidth,this._rightWidth=e.rightWidth??this._rightWidth,this._topHeight=e.topHeight??this._topHeight,this._bottomHeight=e.bottomHeight??this._bottomHeight,e.textureMatrix&&this._textureMatrix.copyFrom(e.textureMatrix),this.updateUvs(),this.updatePositions()}updatePositions(){const e=this.positions,t=this._leftWidth+this._rightWidth,r=this.width>t?1:this.width/t,s=this._topHeight+this._bottomHeight,n=this.height>s?1:this.height/s,a=Math.min(r,n);e[9]=e[11]=e[13]=e[15]=this._topHeight*a,e[17]=e[19]=e[21]=e[23]=this.height-this._bottomHeight*a,e[25]=e[27]=e[29]=e[31]=this.height,e[2]=e[10]=e[18]=e[26]=this._leftWidth*a,e[4]=e[12]=e[20]=e[28]=this.width-this._rightWidth*a,e[6]=e[14]=e[22]=e[30]=this.width,this.getBuffer("aPosition").update()}updateUvs(){const e=this._textureMatrix,t=this.uvs;t[0]=t[8]=t[16]=t[24]=0,t[1]=t[3]=t[5]=t[7]=0,t[6]=t[14]=t[22]=t[30]=1,t[25]=t[27]=t[29]=t[31]=1;const r=1/this._originalWidth,s=1/this._originalHeight;t[2]=t[10]=t[18]=t[26]=r*this._leftWidth,t[9]=t[11]=t[13]=t[15]=s*this._topHeight,t[4]=t[12]=t[20]=t[28]=1-r*this._rightWidth,t[17]=t[19]=t[21]=t[23]=1-s*this._bottomHeight,Lt(e,t),this.getBuffer("aUV").update()}};Qe.defaultOptions={width:100,height:100,leftWidth:10,topHeight:10,rightWidth:10,bottomHeight:10,originalWidth:100,originalHeight:100};let Dt=Qe;function Lt(i,e,t){t??(t=e);const r=i.a,s=i.b,n=i.c,a=i.d,o=i.tx,c=i.ty;for(let l=0;l<e.length;l+=2){const h=e[l],d=e[l+1];t[l]=h*r+d*n+o,t[l+1]=h*s+d*a+c}return t}class Ze{constructor(e){this._gpuSpriteHash=Object.create(null),this._renderer=e}addRenderable(e,t){const r=this._getGpuSprite(e);e._didSpriteUpdate&&this._updateBatchableSprite(e,r),this._renderer.renderPipes.batch.addToBatch(r)}updateRenderable(e){const t=this._gpuSpriteHash[e.uid];e._didSpriteUpdate&&this._updateBatchableSprite(e,t),t.batcher.updateElement(t)}validateRenderable(e){const t=e._texture,r=this._getGpuSprite(e);return r.texture._source!==t._source?!r.batcher.checkAndUpdateTexture(r,t):!1}destroyRenderable(e){const t=this._gpuSpriteHash[e.uid];v.return(t),this._gpuSpriteHash[e.uid]=null}_updateBatchableSprite(e,t){e._didSpriteUpdate=!1,t.geometry.update(e),t.texture=e._texture}_getGpuSprite(e){return this._gpuSpriteHash[e.uid]||this._initGPUSprite(e)}_initGPUSprite(e){const t=new ae;return t.geometry=new Dt,t.mesh=e,t.texture=e._texture,t.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuSpriteHash[e.uid]=t,e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuSpriteHash)this._gpuSpriteHash[e].geometry.destroy();this._gpuSpriteHash=null,this._renderer=null}}Ze.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"nineSliceSprite"};const Et={name:"tiling-bit",vertex:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`
            vUV = (tilingUniforms.uTextureTransform * vec3(aUV, 1.0)).xy;

            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;
        `},fragment:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`

            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);
            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;
            var unclamped = coord;
            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);

            var bias = 0.;

            if(unclamped.x == coord.x && unclamped.y == coord.y)
            {
                bias = -32.;
            } 

            outColor = textureSampleBias(uTexture, uSampler, coord, bias);
        `}},$t={name:"tiling-bit",vertex:{header:`
            uniform mat3 uTextureTransform;
            uniform vec4 uSizeAnchor;
        
        `,main:`
            vUV = (uTextureTransform * vec3(aUV, 1.0)).xy;

            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;
        `},fragment:{header:`
            uniform sampler2D uTexture;
            uniform mat3 uMapCoord;
            uniform vec4 uClampFrame;
            uniform vec2 uClampOffset;
        `,main:`

        vec2 coord = vUV + ceil(uClampOffset - vUV);
        coord = (uMapCoord * vec3(coord, 1.0)).xy;
        vec2 unclamped = coord;
        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);
        
        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0
    
        `}};let N,q;class Xt extends Fe{constructor(){N??(N=Me({name:"tiling-sprite-shader",bits:[Tt,Et,ke]})),q??(q=Re({name:"tiling-sprite-shader",bits:[wt,$t,Ae]}));const e=new D({uMapCoord:{value:new P,type:"mat3x3<f32>"},uClampFrame:{value:new Float32Array([0,0,1,1]),type:"vec4<f32>"},uClampOffset:{value:new Float32Array([0,0]),type:"vec2<f32>"},uTextureTransform:{value:new P,type:"mat3x3<f32>"},uSizeAnchor:{value:new Float32Array([100,100,.5,.5]),type:"vec4<f32>"}});super({glProgram:q,gpuProgram:N,resources:{localUniforms:new D({uTransformMatrix:{value:new P,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),tilingUniforms:e,uTexture:F.EMPTY.source,uSampler:F.EMPTY.source.style}})}updateUniforms(e,t,r,s,n,a){const o=this.resources.tilingUniforms,c=a.width,l=a.height,h=a.textureMatrix,d=o.uniforms.uTextureTransform;d.set(r.a*c/e,r.b*c/t,r.c*l/e,r.d*l/t,r.tx/e,r.ty/t),d.invert(),o.uniforms.uMapCoord=h.mapCoord,o.uniforms.uClampFrame=h.uClampFrame,o.uniforms.uClampOffset=h.uClampOffset,o.uniforms.uTextureTransform=d,o.uniforms.uSizeAnchor[0]=e,o.uniforms.uSizeAnchor[1]=t,o.uniforms.uSizeAnchor[2]=s,o.uniforms.uSizeAnchor[3]=n,a&&(this.resources.uTexture=a.source,this.resources.uSampler=a.source.style)}}class Yt extends ie{constructor(){super({positions:new Float32Array([0,0,1,0,1,1,0,1]),uvs:new Float32Array([0,0,1,0,1,1,0,1]),indices:new Uint32Array([0,1,2,0,2,3])})}}function jt(i,e){const t=i.anchor.x,r=i.anchor.y;e[0]=-t*i.width,e[1]=-r*i.height,e[2]=(1-t)*i.width,e[3]=-r*i.height,e[4]=(1-t)*i.width,e[5]=(1-r)*i.height,e[6]=-t*i.width,e[7]=(1-r)*i.height}function Vt(i,e,t,r){let s=0;const n=i.length/(e||2),a=r.a,o=r.b,c=r.c,l=r.d,h=r.tx,d=r.ty;for(t*=e;s<n;){const f=i[t],u=i[t+1];i[t]=a*f+c*u+h,i[t+1]=o*f+l*u+d,t+=e,s++}}function Kt(i,e){const t=i.texture,r=t.frame.width,s=t.frame.height;let n=0,a=0;i._applyAnchorToTexture&&(n=i.anchor.x,a=i.anchor.y),e[0]=e[6]=-n,e[2]=e[4]=1-n,e[1]=e[3]=-a,e[5]=e[7]=1-a;const o=P.shared;o.copyFrom(i._tileTransform.matrix),o.tx/=i.width,o.ty/=i.height,o.invert(),o.scale(i.width/r,i.height/s),Vt(e,2,0,o)}const L=new Yt;class et{constructor(e){this._tilingSpriteDataHash=Object.create(null),this._renderer=e}validateRenderable(e){const t=this._getTilingSpriteData(e),r=t.canBatch;this._updateCanBatch(e);const s=t.canBatch;if(s&&s===r){const{batchableMesh:n}=t;if(n.texture._source!==e.texture._source)return!n.batcher.checkAndUpdateTexture(n,e.texture)}return r!==s}addRenderable(e,t){const r=this._renderer.renderPipes.batch;this._updateCanBatch(e);const s=this._getTilingSpriteData(e),{geometry:n,canBatch:a}=s;if(a){s.batchableMesh||(s.batchableMesh=new ae);const o=s.batchableMesh;e._didTilingSpriteUpdate&&(e._didTilingSpriteUpdate=!1,this._updateBatchableMesh(e),o.geometry=n,o.mesh=e,o.texture=e._texture),o.roundPixels=this._renderer._roundPixels|e._roundPixels,r.addToBatch(o)}else r.break(t),s.shader||(s.shader=new Xt),this.updateRenderable(e),t.add(e)}execute(e){const{shader:t}=this._tilingSpriteDataHash[e.uid];t.groups[0]=this._renderer.globalUniforms.bindGroup;const r=t.resources.localUniforms.uniforms;r.uTransformMatrix=e.groupTransform,r.uRound=this._renderer._roundPixels|e._roundPixels,se(e.groupColorAlpha,r.uColor,0),this._renderer.encoder.draw({geometry:L,shader:t,state:Pe.default2d})}updateRenderable(e){const t=this._getTilingSpriteData(e),{canBatch:r}=t;if(r){const{batchableMesh:s}=t;e._didTilingSpriteUpdate&&this._updateBatchableMesh(e),s.batcher.updateElement(s)}else if(e._didTilingSpriteUpdate){const{shader:s}=t;s.updateUniforms(e.width,e.height,e._tileTransform.matrix,e.anchor.x,e.anchor.y,e.texture)}e._didTilingSpriteUpdate=!1}destroyRenderable(e){const t=this._getTilingSpriteData(e);t.batchableMesh=null,t.shader?.destroy(),this._tilingSpriteDataHash[e.uid]=null}_getTilingSpriteData(e){return this._tilingSpriteDataHash[e.uid]||this._initTilingSpriteData(e)}_initTilingSpriteData(e){const t=new ie({indices:L.indices,positions:L.positions.slice(),uvs:L.uvs.slice()});return this._tilingSpriteDataHash[e.uid]={canBatch:!0,renderable:e,geometry:t},e.on("destroyed",()=>{this.destroyRenderable(e)}),this._tilingSpriteDataHash[e.uid]}_updateBatchableMesh(e){const t=this._getTilingSpriteData(e),{geometry:r}=t,s=e.texture.source.style;s.addressMode!=="repeat"&&(s.addressMode="repeat",s.update()),Kt(e,r.uvs),jt(e,r.positions)}destroy(){for(const e in this._tilingSpriteDataHash)this.destroyRenderable(this._tilingSpriteDataHash[e].renderable);this._tilingSpriteDataHash=null,this._renderer=null}_updateCanBatch(e){const t=this._getTilingSpriteData(e),r=e.texture;let s=!0;return this._renderer.type===re.WEBGL&&(s=this._renderer.context.supports.nonPowOf2wrapping),t.canBatch=r.textureMatrix.isSimple&&(s||r.source.isPowerOfTwo),t.canBatch}}et.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"tilingSprite"};const Q={test(i){return typeof i=="string"&&i.startsWith("info face=")},parse(i){const e=i.match(/^[a-z]+\s+.+$/gm),t={info:[],common:[],page:[],char:[],chars:[],kerning:[],kernings:[],distanceField:[]};for(const d in e){const f=e[d].match(/^[a-z]+/gm)[0],u=e[d].match(/[a-zA-Z]+=([^\s"']+|"([^"]*)")/gm),p={};for(const g in u){const m=u[g].split("="),x=m[0],b=m[1].replace(/"/gm,""),w=parseFloat(b),y=isNaN(w)?b:w;p[x]=y}t[f].push(p)}const r={chars:{},pages:[],lineHeight:0,fontSize:0,fontFamily:"",distanceField:null,baseLineOffset:0},[s]=t.info,[n]=t.common,[a]=t.distanceField??[];a&&(r.distanceField={range:parseInt(a.distanceRange,10),type:a.fieldType}),r.fontSize=parseInt(s.size,10),r.fontFamily=s.face,r.lineHeight=parseInt(n.lineHeight,10);const o=t.page;for(let d=0;d<o.length;d++)r.pages.push({id:parseInt(o[d].id,10)||0,file:o[d].file});const c={};r.baseLineOffset=r.lineHeight-parseInt(n.base,10);const l=t.char;for(let d=0;d<l.length;d++){const f=l[d],u=parseInt(f.id,10);let p=f.letter??f.char??String.fromCharCode(u);p==="space"&&(p=" "),c[u]=p,r.chars[p]={id:u,page:parseInt(f.page,10)||0,x:parseInt(f.x,10),y:parseInt(f.y,10),width:parseInt(f.width,10),height:parseInt(f.height,10),xOffset:parseInt(f.xoffset,10),yOffset:parseInt(f.yoffset,10),xAdvance:parseInt(f.xadvance,10),kerning:{}}}const h=t.kerning||[];for(let d=0;d<h.length;d++){const f=parseInt(h[d].first,10),u=parseInt(h[d].second,10),p=parseInt(h[d].amount,10);r.chars[c[u]].kerning[c[f]]=p}return r}},_e={test(i){const e=i;return typeof e!="string"&&"getElementsByTagName"in e&&e.getElementsByTagName("page").length&&e.getElementsByTagName("info")[0].getAttribute("face")!==null},parse(i){const e={chars:{},pages:[],lineHeight:0,fontSize:0,fontFamily:"",distanceField:null,baseLineOffset:0},t=i.getElementsByTagName("info")[0],r=i.getElementsByTagName("common")[0],s=i.getElementsByTagName("distanceField")[0];s&&(e.distanceField={type:s.getAttribute("fieldType"),range:parseInt(s.getAttribute("distanceRange"),10)});const n=i.getElementsByTagName("page"),a=i.getElementsByTagName("char"),o=i.getElementsByTagName("kerning");e.fontSize=parseInt(t.getAttribute("size"),10),e.fontFamily=t.getAttribute("face"),e.lineHeight=parseInt(r.getAttribute("lineHeight"),10);for(let l=0;l<n.length;l++)e.pages.push({id:parseInt(n[l].getAttribute("id"),10)||0,file:n[l].getAttribute("file")});const c={};e.baseLineOffset=e.lineHeight-parseInt(r.getAttribute("base"),10);for(let l=0;l<a.length;l++){const h=a[l],d=parseInt(h.getAttribute("id"),10);let f=h.getAttribute("letter")??h.getAttribute("char")??String.fromCharCode(d);f==="space"&&(f=" "),c[d]=f,e.chars[f]={id:d,page:parseInt(h.getAttribute("page"),10)||0,x:parseInt(h.getAttribute("x"),10),y:parseInt(h.getAttribute("y"),10),width:parseInt(h.getAttribute("width"),10),height:parseInt(h.getAttribute("height"),10),xOffset:parseInt(h.getAttribute("xoffset"),10),yOffset:parseInt(h.getAttribute("yoffset"),10),xAdvance:parseInt(h.getAttribute("xadvance"),10),kerning:{}}}for(let l=0;l<o.length;l++){const h=parseInt(o[l].getAttribute("first"),10),d=parseInt(o[l].getAttribute("second"),10),f=parseInt(o[l].getAttribute("amount"),10);e.chars[c[d]].kerning[c[h]]=f}return e}},be={test(i){return typeof i=="string"&&i.includes("<font>")?_e.test(O.get().parseXML(i)):!1},parse(i){return _e.parse(O.get().parseXML(i))}};class tt extends Le{constructor(e,t){super();const{textures:r,data:s}=e;Object.keys(s.pages).forEach(n=>{const a=s.pages[parseInt(n,10)],o=r[a.id];this.pages.push({texture:o})}),Object.keys(s.chars).forEach(n=>{const a=s.chars[n],o=r[a.page].source,c=new $(a.x,a.y,a.width,a.height),l=new F({source:o,frame:c});this.chars[n]={id:n.codePointAt(0),xOffset:a.xOffset,yOffset:a.yOffset,xAdvance:a.xAdvance,kerning:a.kerning??{},texture:l}}),this.baseRenderedFontSize=s.fontSize,this.baseMeasurementFontSize=s.fontSize,this.fontMetrics={ascent:0,descent:0,fontSize:s.fontSize},this.baseLineOffset=s.baseLineOffset,this.lineHeight=s.lineHeight,this.fontFamily=s.fontFamily,this.distanceField=s.distanceField??{type:"none",range:0},this.url=t}destroy(){super.destroy();for(let e=0;e<this.pages.length;e++){const{texture:t}=this.pages[e];t.destroy(!0)}this.pages=null}static install(e){te.install(e)}static uninstall(e){te.uninstall(e)}}const Nt=[".xml",".fnt"],qt={extension:_.CacheParser,test:i=>i instanceof tt,getCacheableAssets(i,e){const t={};return i.forEach(r=>{t[r]=e}),t[`${e.fontFamily}-bitmap`]=e,t}},Qt={extension:{type:_.LoadParser,priority:xt.Normal},test(i){return Nt.includes(K.extname(i).toLowerCase())},async testParse(i){return Q.test(i)||be.test(i)},async parse(i,e,t){const r=Q.test(i)?Q.parse(i):be.parse(i),{src:s}=e,{pages:n}=r,a=[];for(let h=0;h<n.length;++h){const d=n[h].file;let f=K.join(K.dirname(s),d);f=_t(f,s),a.push(f)}const o=await t.load(a),c=a.map(h=>o[h]);return new tt({data:r,textures:c},s)},async load(i,e){return await(await O.get().fetch(i)).text()},unload(i){i.destroy()}},Jt={name:"local-uniform-msdf-bit",vertex:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32,
                uRound:f32,
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
        `,main:`
            vColor *= localUniforms.uColor;
            modelMatrix *= localUniforms.uTransformMatrix;
        `,end:`
            if(localUniforms.uRound == 1)
            {
                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);
            }
        `},fragment:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
         `,main:` 
            outColor = vColor * calculateMSDFAlpha(outColor, localUniforms.uDistance);
        `}},Zt={name:"local-uniform-msdf-bit",vertex:{header:`
            uniform mat3 uTransformMatrix;
            uniform vec4 uColor;
            uniform float uRound;
        `,main:`
            vColor *= uColor;
            modelMatrix *= uTransformMatrix;
        `,end:`
            if(uRound == 1.)
            {
                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
            }
        `},fragment:{header:`
            uniform float uDistance;
         `,main:` 
            outColor = vColor * calculateMSDFAlpha(outColor, uDistance);
        `}},er={name:"msdf-bit",fragment:{header:`
            fn calculateMSDFAlpha(msdfColor:vec4<f32>, distance:f32) -> f32 {
                
                // MSDF
                var median = msdfColor.r + msdfColor.g + msdfColor.b -
                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));
            
                // SDF
                median = min(median, msdfColor.a);

                var screenPxDistance = distance * (median - 0.5);
                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                return alpha;
            }
        `}},tr={name:"msdf-bit",fragment:{header:`
            float calculateMSDFAlpha(vec4 msdfColor, float distance) {
                
                // MSDF
                float median = msdfColor.r + msdfColor.g + msdfColor.b -
                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));
               
                // SDF
                median = min(median, msdfColor.a);
            
                float screenPxDistance = distance * (median - 0.5);
                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
           
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                return alpha;
            }
        `}};class rr extends Fe{constructor(){const e=new D({uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uTransformMatrix:{value:new P,type:"mat3x3<f32>"},uDistance:{value:4,type:"f32"},uRound:{value:0,type:"f32"}}),t=Me({name:"sdf-shader",bits:[St,vt(le),Jt,er,ke]}),r=Re({name:"sdf-shader",bits:[Ct,Bt(le),Zt,tr,Ae]});super({glProgram:r,gpuProgram:t,resources:{localUniforms:e,batchSamplers:Pt}})}}class rt{constructor(e){this._gpuBitmapText={},this._renderer=e}validateRenderable(e){const t=this._getGpuBitmapText(e);return e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,t)),this._renderer.renderPipes.graphics.validateRenderable(t)}addRenderable(e,t){const r=this._getGpuBitmapText(e);ye(e,r),e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,r)),this._renderer.renderPipes.graphics.addRenderable(r,t),r.context.customShader&&this._updateDistanceField(e)}destroyRenderable(e){this._destroyRenderableByUid(e.uid)}_destroyRenderableByUid(e){v.return(this._gpuBitmapText[e]),this._gpuBitmapText[e]=null}updateRenderable(e){const t=this._getGpuBitmapText(e);ye(e,t),this._renderer.renderPipes.graphics.updateRenderable(t),t.context.customShader&&this._updateDistanceField(e)}_updateContext(e,t){const{context:r}=t,s=te.getFont(e.text,e._style);r.clear(),s.distanceField.type!=="none"&&(r.customShader||(this._sdfShader||(this._sdfShader=new rr),r.customShader=this._sdfShader));const n=Array.from(e.text),a=e._style;let o=(a._stroke?.width||0)/2;o+=s.baseLineOffset;const c=$e(n,a,s);let l=0;const h=a.padding,d=c.scale;r.translate(-e._anchor._x*c.width-h,-e._anchor._y*(c.height+c.offsetY)-h).scale(d,d);const f=a._fill.color;for(let u=0;u<c.lines.length;u++){const p=c.lines[u];for(let g=0;g<p.charPositions.length;g++){const m=n[l++],x=s.chars[m];x?.texture&&r.texture(x.texture,f||"black",Math.round(p.charPositions[g]+x.xOffset),Math.round(o+x.yOffset))}o+=s.lineHeight}}_getGpuBitmapText(e){return this._gpuBitmapText[e.uid]||this.initGpuText(e)}initGpuText(e){const t=v.get(bt);return this._gpuBitmapText[e.uid]=t,this._updateContext(e,t),e.on("destroyed",()=>{this.destroyRenderable(e)}),this._gpuBitmapText[e.uid]}_updateDistanceField(e){const t=this._getGpuBitmapText(e).context,r=e._style.fontFamily,s=B.get(`${r}-bitmap`),{a:n,b:a,c:o,d:c}=e.groupTransform,l=Math.sqrt(n*n+a*a),h=Math.sqrt(o*o+c*c),d=(Math.abs(l)+Math.abs(h))/2,f=s.baseRenderedFontSize/e._style.fontSize,u=e.resolution??this._renderer.resolution,p=d*s.distanceField.range*(1/f)*u;t.customShader.resources.localUniforms.uniforms.uDistance=p}destroy(){for(const e in this._gpuBitmapText)this._destroyRenderableByUid(e);this._gpuBitmapText=null,this._sdfShader?.destroy(!0),this._sdfShader=null,this._renderer=null}}rt.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"bitmapText"};function ye(i,e){e.groupTransform=i.groupTransform,e.groupColorAlpha=i.groupColorAlpha,e.groupColor=i.groupColor,e.groupBlendMode=i.groupBlendMode,e.globalDisplayStatus=i.globalDisplayStatus,e.groupTransform=i.groupTransform,e.localDisplayStatus=i.localDisplayStatus,e.groupAlpha=i.groupAlpha,e._roundPixels=i._roundPixels}class st{constructor(e){this._gpuText=Object.create(null),this._renderer=e}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();return t.textureNeedsUploading?(t.textureNeedsUploading=!1,!0):t.currentKey!==r}addRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(r)}updateRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),r.batcher.updateElement(r)}destroyRenderable(e){this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.htmlText.decreaseReferenceCount(t.currentKey),v.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),s=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e).catch(a=>{console.error(a)}),e._didTextUpdate=!1;const n=e._style.padding;ee(s.bounds,e._anchor,s.texture,n)}async _updateGpuText(e){e._didTextUpdate=!1;const t=this._getGpuText(e);if(t.generatingTexture)return;const r=e._getKey();this._renderer.htmlText.decreaseReferenceCount(t.currentKey),t.generatingTexture=!0,t.currentKey=r;const s=e.resolution??this._renderer.resolution,n=await this._renderer.htmlText.getManagedTexture(e.text,s,e._style,e._getKey()),a=t.batchableSprite;a.texture=t.texture=n,t.generatingTexture=!1,t.textureNeedsUploading=!0,e._onUpdate();const o=e._style.padding;ee(a.bounds,e._anchor,a.texture,o)}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:F.EMPTY,currentKey:"--",batchableSprite:v.get(Ue),textureNeedsUploading:!1,generatingTexture:!1},r=t.batchableSprite;return r.renderable=e,r.texture=F.EMPTY,r.bounds={minX:0,maxX:1,minY:0,maxY:0},r.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuText[e.uid]=t,e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}st.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"htmlText"};function sr(){const{userAgent:i}=O.get().getNavigator();return/^((?!chrome|android).)*safari/i.test(i)}const ir=new Be;function it(i,e,t,r){const s=ir;s.minX=0,s.minY=0,s.maxX=i.width/r|0,s.maxY=i.height/r|0;const n=M.getOptimalTexture(s.width,s.height,r,!1);return n.source.uploadMethodId="image",n.source.resource=i,n.source.alphaMode="premultiply-alpha-on-upload",n.frame.width=e/r,n.frame.height=t/r,n.source.emit("update",n.source),n.updateUvs(),n}function nr(i,e){const t=e.fontFamily,r=[],s={},n=/font-family:([^;"\s]+)/g,a=i.match(n);function o(c){s[c]||(r.push(c),s[c]=!0)}if(Array.isArray(t))for(let c=0;c<t.length;c++)o(t[c]);else o(t);a&&a.forEach(c=>{const l=c.split(":")[1].trim();o(l)});for(const c in e.tagStyles){const l=e.tagStyles[c].fontFamily;o(l)}return r}async function ar(i){const t=await(await O.get().fetch(i)).blob(),r=new FileReader;return await new Promise((n,a)=>{r.onloadend=()=>n(r.result),r.onerror=a,r.readAsDataURL(t)})}async function Te(i,e){const t=await ar(e);return`@font-face {
        font-family: "${i.fontFamily}";
        src: url('${t}');
        font-weight: ${i.fontWeight};
        font-style: ${i.fontStyle};
    }`}const E=new Map;async function or(i,e,t){const r=i.filter(s=>B.has(s)).map((s,n)=>{if(!E.has(s)){const{url:a}=B.get(s);n===0?E.set(s,Te(e,a)):E.set(s,Te({fontWeight:t.fontWeight,fontStyle:t.fontStyle,fontFamily:s},a))}return E.get(s)});return(await Promise.all(r)).join(`
`)}function cr(i,e,t,r,s){const{domElement:n,styleElement:a,svgRoot:o}=s;n.innerHTML=`<style>${e.cssStyle}</style><div>${i}</div>`,n.setAttribute("style",`transform: scale(${t});transform-origin: top left; display: inline-block`),a.textContent=r;const{width:c,height:l}=s.image;return o.setAttribute("width",c.toString()),o.setAttribute("height",l.toString()),new XMLSerializer().serializeToString(o)}function hr(i,e){const t=W.getOptimalCanvasAndContext(i.width,i.height,e),{context:r}=t;return r.clearRect(0,0,i.width,i.height),r.drawImage(i,0,0),W.returnCanvasAndContext(t),t.canvas}function lr(i,e,t){return new Promise(async r=>{t&&await new Promise(s=>setTimeout(s,100)),i.onload=()=>{r()},i.src=`data:image/svg+xml;charset=utf8,${encodeURIComponent(e)}`,i.crossOrigin="anonymous"})}class oe{constructor(e){this._activeTextures={},this._renderer=e,this._createCanvas=e.type===re.WEBGPU}getTexture(e){return this._buildTexturePromise(e.text,e.resolution,e.style)}getManagedTexture(e,t,r,s){if(this._activeTextures[s])return this._increaseReferenceCount(s),this._activeTextures[s].promise;const n=this._buildTexturePromise(e,t,r).then(a=>(this._activeTextures[s].texture=a,a));return this._activeTextures[s]={texture:null,promise:n,usageCount:1},n}async _buildTexturePromise(e,t,r){const s=v.get(je),n=nr(e,r),a=await or(n,r,ne.defaultTextStyle),o=It(e,r,a,s),c=Math.ceil(Math.ceil(Math.max(1,o.width)+r.padding*2)*t),l=Math.ceil(Math.ceil(Math.max(1,o.height)+r.padding*2)*t),h=s.image;h.width=c|0,h.height=l|0;const d=cr(e,r,t,a,s);await lr(h,d,sr()&&n.length>0);let f=h;this._createCanvas&&(f=hr(h,t));const u=it(f,h.width,h.height,t);return this._createCanvas&&this._renderer.texture.initSource(u.source),v.return(s),u}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];t&&(t.usageCount--,t.usageCount===0&&(t.texture?this._cleanUp(t):t.promise.then(r=>{t.texture=r,this._cleanUp(t)}).catch(()=>{I("HTMLTextSystem: Failed to clean texture")}),this._activeTextures[e]=null))}_cleanUp(e){M.returnTexture(e.texture),e.texture.source.resource=null,e.texture.source.uploadMethodId="unknown"}getReferenceCount(e){return this._activeTextures[e].usageCount}destroy(){this._activeTextures=null}}oe.extension={type:[_.WebGLSystem,_.WebGPUSystem,_.CanvasSystem],name:"htmlText"};oe.defaultFontOptions={fontFamily:"Arial",fontStyle:"normal",fontWeight:"normal"};class nt{constructor(e){this._gpuText=Object.create(null),this._renderer=e}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();if(t.currentKey!==r){const s=e.resolution??this._renderer.resolution,{width:n,height:a}=this._renderer.canvasText.getTextureSize(e.text,s,e._style);return!(this._renderer.canvasText.getReferenceCount(t.currentKey)===1&&n===t.texture._source.width&&a===t.texture._source.height)}return!1}addRenderable(e,t){const s=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(s)}updateRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),r.batcher.updateElement(r)}destroyRenderable(e){this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.canvasText.decreaseReferenceCount(t.currentKey),v.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),s=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e),e._didTextUpdate=!1;const n=e._style.padding;ee(s.bounds,e._anchor,s.texture,n)}_updateGpuText(e){const t=this._getGpuText(e),r=t.batchableSprite;t.texture&&this._renderer.canvasText.decreaseReferenceCount(t.currentKey);const s=e.resolution??this._renderer.resolution;t.texture=r.texture=this._renderer.canvasText.getTexture(e.text,s,e._style,e._getKey()),t.currentKey=e._getKey(),r.texture=t.texture}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:null,currentKey:"--",batchableSprite:v.get(Ue)};return t.batchableSprite.renderable=e,t.batchableSprite.bounds={minX:0,maxX:1,minY:0,maxY:0},t.batchableSprite.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuText[e.uid]=t,this._updateText(e),e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}nt.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"text"};function we(i,e,t){for(let r=0,s=4*t*e;r<e;++r,s+=4)if(i[s+3]!==0)return!1;return!0}function Se(i,e,t,r,s){const n=4*e;for(let a=r,o=r*n+4*t;a<=s;++a,o+=n)if(i[o+3]!==0)return!1;return!0}function dr(i,e=1){const{width:t,height:r}=i,s=i.getContext("2d",{willReadFrequently:!0});if(s===null)throw new TypeError("Failed to get canvas 2D context");const a=s.getImageData(0,0,t,r).data;let o=0,c=0,l=t-1,h=r-1;for(;c<r&&we(a,t,c);)++c;if(c===r)return $.EMPTY;for(;we(a,t,h);)--h;for(;Se(a,t,o,c,h);)++o;for(;Se(a,t,l,c,h);)--l;return++l,++h,new $(o/e,c/e,(l-o)/e,(h-c)/e)}class at{constructor(){this._activeTextures={}}getTextureSize(e,t,r){const s=R.measureText(e||" ",r);let n=Math.ceil(Math.ceil(Math.max(1,s.width)+r.padding*2)*t),a=Math.ceil(Math.ceil(Math.max(1,s.height)+r.padding*2)*t);return n=Math.ceil(n-1e-6),a=Math.ceil(a-1e-6),n=de(n),a=de(a),{width:n,height:a}}getTexture(e,t,r,s){if(this._activeTextures[s])return this._increaseReferenceCount(s),this._activeTextures[s].texture;const n=R.measureText(e||" ",r),a=Math.ceil(Math.ceil(Math.max(1,n.width)+r.padding*2)*t),o=Math.ceil(Math.ceil(Math.max(1,n.height)+r.padding*2)*t),c=W.getOptimalCanvasAndContext(a,o),{canvas:l}=c;this.renderTextToCanvas(e,r,t,c);const h=it(l,a,o,t);if(r.trim){const d=dr(l,t);h.frame.copyFrom(d),h.updateUvs()}return this._activeTextures[s]={canvasAndContext:c,texture:h,usageCount:1},h}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];if(t.usageCount--,t.usageCount===0){W.returnCanvasAndContext(t.canvasAndContext),M.returnTexture(t.texture);const r=t.texture.source;r.resource=null,r.uploadMethodId="unknown",r.alphaMode="no-premultiply-alpha",this._activeTextures[e]=null}}getReferenceCount(e){return this._activeTextures[e].usageCount}renderTextToCanvas(e,t,r,s){const{canvas:n,context:a}=s,o=J(t),c=R.measureText(e||" ",t),l=c.lines,h=c.lineHeight,d=c.lineWidths,f=c.maxLineWidth,u=c.fontProperties,p=n.height;if(a.resetTransform(),a.scale(r,r),a.clearRect(0,0,c.width+4,c.height+4),t._stroke?.width){const b=t._stroke;a.lineWidth=b.width,a.miterLimit=b.miterLimit,a.lineJoin=b.join,a.lineCap=b.cap}a.font=o;let g,m;const x=t.dropShadow?2:1;for(let b=0;b<x;++b){const w=t.dropShadow&&b===0,y=w?Math.ceil(Math.max(1,p)+t.padding*2):0,G=y*r;if(w){a.fillStyle="black",a.strokeStyle="black";const T=t.dropShadow,Y=T.color,ot=T.alpha;a.shadowColor=U.shared.setValue(Y).setAlpha(ot).toRgbaString();const ct=T.blur*r,ce=T.distance*r;a.shadowBlur=ct,a.shadowOffsetX=Math.cos(T.angle)*ce,a.shadowOffsetY=Math.sin(T.angle)*ce+G}else a.globalAlpha=t._fill?.alpha??1,a.fillStyle=t._fill?X(t._fill,a):null,t._stroke?.width&&(a.strokeStyle=X(t._stroke,a)),a.shadowColor="black";let z=(h-u.fontSize)/2;h-u.fontSize<0&&(z=0);const S=t._stroke?.width??0;for(let T=0;T<l.length;T++)g=S/2,m=S/2+T*h+u.ascent+z,t.align==="right"?g+=f-d[T]:t.align==="center"&&(g+=(f-d[T])/2),t._stroke&&this._drawLetterSpacing(l[T],t,s,g+t.padding,m+t.padding-y,!0),t._fill!==void 0&&this._drawLetterSpacing(l[T],t,s,g+t.padding,m+t.padding-y)}}_drawLetterSpacing(e,t,r,s,n,a=!1){const{context:o}=r,c=t.letterSpacing;let l=!1;if(R.experimentalLetterSpacingSupported&&(R.experimentalLetterSpacing?(o.letterSpacing=`${c}px`,o.textLetterSpacing=`${c}px`,l=!0):(o.letterSpacing="0px",o.textLetterSpacing="0px")),c===0||l){a?o.strokeText(e,s,n):o.fillText(e,s,n);return}let h=s;const d=R.graphemeSegmenter(e);let f=o.measureText(e).width,u=0;for(let p=0;p<d.length;++p){const g=d[p];a?o.strokeText(g,h,n):o.fillText(g,h,n);let m="";for(let x=p+1;x<d.length;++x)m+=d[x];u=o.measureText(m).width,h+=f-u+c,f=u}}destroy(){this._activeTextures=null}}at.extension={type:[_.WebGLSystem,_.WebGPUSystem,_.CanvasSystem],name:"canvasText"};C.add(Ge);C.add(ze);C.add(Ve);C.add(yt);C.add(qe);C.add(at);C.add(nt);C.add(rt,Qt,qt);C.add(oe);C.add(st);C.add(et);C.add(Ze);C.add(Ie);C.add(He);
